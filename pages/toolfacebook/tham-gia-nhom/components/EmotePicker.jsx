import { useState } from 'react';
import styles from './EmotePicker.module.css';

const EmotePicker = ({ onEmoteSelect, onClose, show, position }) => {
  const [hoveredEmote, setHoveredEmote] = useState(null);

  // Facebook-like emotes organized by categories
  const emoteCategories = {
    'Smileys & People': [
      'üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'ü§£', 'üòÇ', 'üôÇ', 'üôÉ',
      'üòâ', 'üòä', 'üòá', 'ü•∞', 'üòç', 'ü§©', 'üòò', 'üòó', 'üòö', 'üòô',
      'üòã', 'üòõ', 'üòú', 'ü§™', 'üòù', 'ü§ë', 'ü§ó', 'ü§≠', 'ü§´', 'ü§î',
      'ü§ê', 'ü§®', 'üòê', 'üòë', 'üò∂', 'üòè', 'üòí', 'üôÑ', 'üò¨', 'ü§•',
      'üòî', 'üò™', 'ü§§', 'üò¥', 'üò∑', 'ü§í', 'ü§ï', 'ü§¢', 'ü§Æ', 'ü§ß',
      'ü•µ', 'ü•∂', 'ü•¥', 'üòµ', 'ü§Ø', 'ü§†', 'ü•≥', 'üòé', 'ü§ì', 'üßê'
    ],
    'Hearts & Love': [
      '‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§ç', 'ü§é', 'üíî',
      '‚ù£Ô∏è', 'üíï', 'üíû', 'üíì', 'üíó', 'üíñ', 'üíò', 'üíù', 'üíü', '‚ô•Ô∏è'
    ],
    'Hand Gestures': [
      'üëç', 'üëé', 'üëå', '‚úåÔ∏è', 'ü§û', 'ü§ü', 'ü§ò', 'ü§ô', 'üëà', 'üëâ',
      'üëÜ', 'üñï', 'üëá', '‚òùÔ∏è', 'üëã', 'ü§ö', 'üñêÔ∏è', '‚úã', 'üññ', 'üëè',
      'üôå', 'üëê', 'ü§≤', 'ü§ù', 'üôè', '‚úçÔ∏è', 'üí™', 'ü¶µ', 'ü¶∂', 'üëÇ'
    ],
    'Popular': [
      'üòÇ', '‚ù§Ô∏è', 'üòç', 'üòä', 'ü§î', 'üëç', 'üòé', 'üò¢', 'üò°', 'üôÑ',
      'üòú', 'ü§∑‚Äç‚ôÄÔ∏è', 'ü§∑‚Äç‚ôÇÔ∏è', 'üî•', 'üíØ', '‚ú®', 'üéâ', 'üëè', 'üôè', 'üíï'
    ]
  };

  const [activeCategory, setActiveCategory] = useState('Popular');

  const handleEmoteClick = (emote) => {
    onEmoteSelect(emote);
    onClose();
  };

  if (!show) return null;

  return (
    <div 
      className={styles.emotePicker}
      style={{
        position: 'absolute',
        top: '2px',
        left: '2px',
        zIndex: 1000
      }}
    >
      <div className={styles.emotePickerHeader}>
        <div className={styles.categoryTabs}>
          {Object.keys(emoteCategories).map((category) => (
            <button
              key={category}
              className={`${styles.categoryTab} ${
                activeCategory === category ? styles.active : ''
              }`}
              onClick={() => setActiveCategory(category)}
            >
              {category === 'Popular' && '‚≠ê'}
              {category === 'Smileys & People' && 'üòÄ'}
              {category === 'Hearts & Love' && '‚ù§Ô∏è'}
              {category === 'Hand Gestures' && 'üëç'}
            </button>
          ))}
        </div>
      </div>
      
      <div className={styles.emoteGrid}>
        {emoteCategories[activeCategory].map((emote, index) => (
          <button
            key={index}
            className={`${styles.emoteButton} ${
              hoveredEmote === emote ? styles.hovered : ''
            }`}
            onClick={() => handleEmoteClick(emote)}
            onMouseEnter={() => setHoveredEmote(emote)}
            onMouseLeave={() => setHoveredEmote(null)}
            title={emote}
          >
            {emote}
          </button>
        ))}
      </div>
      
      {hoveredEmote && (
        <div className={styles.emotePreview}>
          <span className={styles.previewEmote}>{hoveredEmote}</span>
        </div>
      )}
      
      <div className={styles.emotePickerFooter}>
        <span className={styles.categoryName}>{activeCategory}</span>
      </div>
    </div>
  );
};

export default EmotePicker;